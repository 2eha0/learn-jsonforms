{
  "entity_checks": [
    {
      "at_least_one_of": [
        "body_schema",
        "parameter_schema"
      ]
    }
  ],
  "fields": [
    {
      "allowed_content_types": {
        "default": [
          "application/json"
        ],
        "description": "List of allowed content types. The value can be configured with the `charset` parameter. For example, `application/json; charset=UTF-8`.",
        "elements": {
          "required": true,
          "type": "string"
        },
        "type": "set"
      }
    },
    {
      "body_schema": {
        "description": "The request body schema specification. One of `body_schema` or `parameter_schema` must be specified.",
        "required": false,
        "type": "string"
      }
    },
    {
      "content_type_parameter_validation": {
        "default": true,
        "description": "Determines whether to enable parameters validation of request content-type.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "parameter_schema": {
        "description": "Array of parameter validator specification. One of `body_schema` or `parameter_schema` must be specified.",
        "elements": {
          "entity_checks": [
            {
              "custom_entity_check": {
                "field_sources": [
                  "in",
                  "style"
                ]
              }
            },
            {
              "mutually_required": [
                "explode",
                "schema",
                "style"
              ]
            }
          ],
          "fields": [
            {
              "explode": {
                "description": "Required when `schema` and `style` are set. When `explode` is `true`, parameter values of type `array` or `object` generate separate parameters for each value of the array or key-value pair of the map. For other types of parameters, this property has no effect.",
                "type": "boolean"
              }
            },
            {
              "in": {
                "description": "The location of the parameter.",
                "one_of": [
                  "header",
                  "path",
                  "query"
                ],
                "required": true,
                "type": "string"
              }
            },
            {
              "name": {
                "description": "The name of the parameter. Parameter names are case-sensitive, and correspond to the parameter name used by the `in` property. If `in` is `path`, the `name` field MUST correspond to the named capture group from the configured `route`.",
                "required": true,
                "type": "string"
              }
            },
            {
              "required": {
                "description": "Determines whether this parameter is mandatory.",
                "required": true,
                "type": "boolean"
              }
            },
            {
              "schema": {
                "description": "Required when `style` and `explode` are set. This is the schema defining the type used for the parameter. It is validated using `draft4` for JSON Schema draft 4 compliant validator. In addition to being a valid JSON Schema, the parameter schema MUST have a top-level `type` property to enable proper deserialization before validating.",
                "type": "string"
              }
            },
            {
              "style": {
                "description": "Required when `schema` and `explode` are set. Describes how the parameter value will be deserialized depending on the type of the parameter value.",
                "one_of": [
                  "deepObject",
                  "form",
                  "label",
                  "matrix",
                  "pipeDelimited",
                  "simple",
                  "spaceDelimited"
                ],
                "type": "string"
              }
            }
          ],
          "type": "record"
        },
        "required": false,
        "type": "array"
      }
    },
    {
      "verbose_response": {
        "default": false,
        "description": "If enabled, the plugin returns more verbose and detailed validation errors.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "version": {
        "default": "kong",
        "description": "Which validator to use. Supported values are `kong` (default) for using Kong's own schema validator, or `draft4`, `draft7`, `draft201909`, and `draft202012` for using their respective JSON Schema Draft compliant validators.",
        "one_of": [
          "draft201909",
          "draft202012",
          "draft4",
          "draft6",
          "draft7",
          "kong"
        ],
        "required": true,
        "type": "string"
      }
    }
  ],
  "required": true,
  "type": "record"
}