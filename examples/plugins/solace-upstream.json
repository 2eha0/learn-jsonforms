{
  "fields": [
    {
      "message": {
        "description": "The message related configuration.",
        "fields": [
          {
            "ack_timeout": {
              "between": [
                1,
                100000
              ],
              "default": 2000,
              "description": "When using a non-DIRECT guaranteed delivery mode, this property sets the message acknowledgement timeout (waiting time).",
              "required": true,
              "type": "integer"
            }
          },
          {
            "default_content": {
              "description": "When not using `forward_method`, `forward_uri`, `forward_headers` or `forward_body`, this sets the message content.",
              "required": false,
              "type": "string"
            }
          },
          {
            "delivery_mode": {
              "default": "DIRECT",
              "description": "Sets the message delivery mode.",
              "one_of": [
                "DIRECT",
                "PERSISTENT"
              ],
              "required": true,
              "type": "string"
            }
          },
          {
            "destinations": {
              "description": "The message destinations.",
              "elements": {
                "fields": [
                  {
                    "name": {
                      "description": "The name of the destination. You can use `$(uri_captures['topic_name']` in this field.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  {
                    "type": {
                      "default": "QUEUE",
                      "description": "The type of the destination.",
                      "one_of": [
                        "QUEUE",
                        "TOPIC"
                      ],
                      "required": true,
                      "type": "string"
                    }
                  }
                ],
                "type": "record"
              },
              "len_min": 1,
              "required": true,
              "type": "array"
            }
          },
          {
            "dmq_eligible": {
              "default": false,
              "description": "Sets the dead message queue (DMQ) eligible property on the message.",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "forward_body": {
              "default": false,
              "description": "Include the request body and the body arguments in the message.",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "forward_headers": {
              "default": false,
              "description": "Include the request headers in the message.",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "forward_method": {
              "default": false,
              "description": "Include the request method in the message.",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "forward_uri": {
              "default": false,
              "description": "Include the request URI and the URI arguments (as in, query arguments) in the message.",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "functions": {
              "description": "The Lua functions that manipulates (or generates) the message being sent to Solace. The `message` variable can be used to access the current message content, and the function can return a new content.",
              "elements": {
                "type": "string"
              },
              "required": false,
              "type": "array"
            }
          },
          {
            "priority": {
              "between": [
                0,
                255
              ],
              "default": 4,
              "description": "Sets the message priority.",
              "required": true,
              "type": "integer"
            }
          },
          {
            "sender_id": {
              "default": "kong",
              "description": "Allows the application to set the content of the sender identifier.",
              "required": false,
              "type": "string"
            }
          },
          {
            "tracing": {
              "default": false,
              "description": "Enable or disable the tracing. This is primarily used for distributed tracing and message correlation, especially in debugging or tracking message flows across multiple systems.",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "tracing_sampled": {
              "default": false,
              "description": "Indicates whether the message should be included in distributed tracing (i.e., if it should be \"sampled\" for the tracing)",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "ttl": {
              "default": 0,
              "description": "Sets the time to live (TTL) in milliseconds for the message. Setting the time to live to zero disables the TTL for the message.",
              "gt": -1,
              "required": true,
              "type": "integer"
            }
          }
        ],
        "required": true,
        "type": "record"
      }
    },
    {
      "session": {
        "description": "Session related configuration.",
        "fields": [
          {
            "authentication": {
              "description": "Session authentication related configuration.",
              "entity_checks": [
                {
                  "conditional": {
                    "if_field": "scheme",
                    "if_match": {
                      "eq": "BASIC"
                    },
                    "then_field": "username",
                    "then_match": {
                      "required": true
                    }
                  }
                },
                {
                  "conditional": {
                    "if_field": "scheme",
                    "if_match": {
                      "eq": "BASIC"
                    },
                    "then_field": "password",
                    "then_match": {
                      "required": true
                    }
                  }
                },
                {
                  "conditional_at_least_one_of": {
                    "if_field": "scheme",
                    "if_match": {
                      "eq": "OAUTH2"
                    },
                    "then_at_least_one_of": [
                      "access_token",
                      "access_token_header",
                      "id_token",
                      "id_token_header"
                    ],
                    "then_err": "must set one of %s when 'scheme' is 'OAUTH2'"
                  }
                }
              ],
              "fields": [
                {
                  "access_token": {
                    "description": "The OAuth2 access token used with `OAUTH2` authentication scheme when connecting to an event broker.",
                    "encrypted": true,
                    "referenceable": true,
                    "required": false,
                    "type": "string"
                  }
                },
                {
                  "access_token_header": {
                    "required": false,
                    "type": "string"
                  }
                },
                {
                  "id_token": {
                    "description": "The OpenID Connect ID token used with `OAUTH2` authentication scheme when connecting to an event broker.",
                    "encrypted": true,
                    "referenceable": true,
                    "required": false,
                    "type": "string"
                  }
                },
                {
                  "id_token_header": {
                    "required": false,
                    "type": "string"
                  }
                },
                {
                  "password": {
                    "description": "The password used with `BASIC` authentication scheme when connecting to an event broker.",
                    "encrypted": true,
                    "referenceable": true,
                    "required": false,
                    "type": "string"
                  }
                },
                {
                  "scheme": {
                    "default": "BASIC",
                    "description": "The client authentication scheme used when connection to an event broker.",
                    "one_of": [
                      "BASIC",
                      "NONE",
                      "OAUTH2"
                    ],
                    "required": true,
                    "type": "string"
                  }
                },
                {
                  "username": {
                    "description": "The username used with `BASIC` authentication scheme when connecting to an event broker.",
                    "referenceable": true,
                    "required": false,
                    "type": "string"
                  }
                }
              ],
              "required": true,
              "type": "record"
            }
          },
          {
            "connect_timeout": {
              "between": [
                100,
                100000
              ],
              "default": 3000,
              "description": "The timeout period (in milliseconds) for a connect operation to a given host (per host).",
              "required": true,
              "type": "integer"
            }
          },
          {
            "host": {
              "description": "The IPv4 or IPv6 address or host name to connect to (see: https://docs.solace.com/API-Developer-Online-Ref-Documentation/c/index.html#host-entry).",
              "referenceable": true,
              "required": true,
              "type": "string"
            }
          },
          {
            "properties": {
              "description": "Additional Solace session properties (each setting needs to have `SESSION_` prefix).",
              "keys": {
                "match": "^SESSION_",
                "not_one_of": [
                  "SESSION_ACK_EVENT_MODE",
                  "SESSION_AUTHENTICATION_SCHEME",
                  "SESSION_BLOCK_WHILE_CONNECTING",
                  "SESSION_CONNECT_BLOCKING",
                  "SESSION_CONNECT_TIMEOUT_MS",
                  "SESSION_HOST",
                  "SESSION_OAUTH2_ACCESS_TOKEN",
                  "SESSION_OIDC_ID_TOKEN",
                  "SESSION_PASSWORD",
                  "SESSION_SEND_BLOCKING",
                  "SESSION_SSL_VALIDATE_CERTIFICATE",
                  "SESSION_SUBSCRIBE_BLOCKING",
                  "SESSION_USERNAME",
                  "SESSION_VPN_NAME"
                ],
                "required": true,
                "type": "string"
              },
              "required": false,
              "type": "map",
              "values": {
                "referenceable": true,
                "required": true,
                "type": "string"
              }
            }
          },
          {
            "ssl_validate_certificate": {
              "default": false,
              "description": "Indicates whether the API should validate server certificates with the trusted certificates.",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "vpn_name": {
              "description": "The name of the Message VPN to attempt to join when connecting to an event broker.",
              "required": false,
              "type": "string"
            }
          }
        ],
        "required": true,
        "type": "record"
      }
    }
  ],
  "required": true,
  "type": "record"
}