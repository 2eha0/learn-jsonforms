{
  "fields": [
    {
      "anonymous": {
        "description": "An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`.",
        "type": "string"
      }
    },
    {
      "hide_credentials": {
        "default": false,
        "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`, the plugin strips the credential from the request.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "identity_realms": {
        "default": [
          {
            "id": null,
            "region": null,
            "scope": "cp"
          }
        ],
        "description": "A configuration of Konnect Identity Realms that indicate where to source a consumer from.",
        "elements": {
          "entity_checks": [
            {
              "conditional": {
                "if_field": "scope",
                "if_match": {
                  "eq": "realm"
                },
                "then_field": "id",
                "then_match": {
                  "required": true
                }
              }
            },
            {
              "conditional": {
                "if_field": "scope",
                "if_match": {
                  "eq": "cp"
                },
                "then_field": "id",
                "then_match": {
                  "eq": null,
                  "required": false
                }
              }
            },
            {
              "conditional": {
                "if_field": "scope",
                "if_match": {
                  "eq": "cp"
                },
                "then_field": "region",
                "then_match": {
                  "eq": null,
                  "required": false
                }
              }
            }
          ],
          "fields": [
            {
              "id": {
                "auto": false,
                "description": "A string representing a UUID (universally unique identifier).",
                "type": "string",
                "uuid": true
              }
            },
            {
              "region": {
                "type": "string"
              }
            },
            {
              "scope": {
                "one_of": [
                  "cp",
                  "realm"
                ],
                "type": "string"
              }
            }
          ],
          "type": "record"
        },
        "type": "set"
      }
    },
    {
      "key_in_body": {
        "default": false,
        "description": "If enabled, the plugin reads the request body. Supported MIME types: `application/www-form-urlencoded`, `application/json`, and `multipart/form-data`.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "key_in_header": {
        "default": true,
        "description": "If enabled (default), the plugin reads the request header and tries to find the key in it.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "key_in_query": {
        "default": true,
        "description": "If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "key_names": {
        "default": [
          "apikey"
        ],
        "description": "Describes an array of parameter names where the plugin will look for a key. The key names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen.",
        "elements": {
          "description": "A string representing an HTTP header name.",
          "type": "string"
        },
        "required": true,
        "type": "array"
      }
    },
    {
      "realm": {
        "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
        "required": false,
        "type": "string"
      }
    },
    {
      "run_on_preflight": {
        "default": true,
        "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests are always allowed.",
        "required": true,
        "type": "boolean"
      }
    }
  ],
  "required": true,
  "type": "record"
}