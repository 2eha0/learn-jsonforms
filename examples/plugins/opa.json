{
  "fields": [
    {
      "include_body_in_opa_input": {
        "default": false,
        "type": "boolean"
      }
    },
    {
      "include_consumer_in_opa_input": {
        "default": false,
        "description": "If set to true, the Kong Gateway Consumer object in use for the current request (if any) is included as input to OPA.",
        "type": "boolean"
      }
    },
    {
      "include_parsed_json_body_in_opa_input": {
        "default": false,
        "description": "If set to true and the `Content-Type` header of the current request is `application/json`, the request body will be JSON decoded and the decoded struct is included as input to OPA.",
        "type": "boolean"
      }
    },
    {
      "include_route_in_opa_input": {
        "default": false,
        "description": "If set to true, the Kong Gateway Route object in use for the current request is included as input to OPA.",
        "type": "boolean"
      }
    },
    {
      "include_service_in_opa_input": {
        "default": false,
        "description": "If set to true, the Kong Gateway Service object in use for the current request is included as input to OPA.",
        "type": "boolean"
      }
    },
    {
      "include_uri_captures_in_opa_input": {
        "default": false,
        "description": "If set to true, the regex capture groups captured on the Kong Gateway Route's path field in the current request (if any) are included as input to OPA.",
        "type": "boolean"
      }
    },
    {
      "opa_host": {
        "default": "localhost",
        "description": "A string representing a host name, such as example.com.",
        "required": true,
        "type": "string"
      }
    },
    {
      "opa_path": {
        "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
        "match_none": [
          {
            "err": "must not have empty segments",
            "pattern": "//"
          }
        ],
        "required": true,
        "starts_with": "/",
        "type": "string"
      }
    },
    {
      "opa_port": {
        "between": [
          0,
          65535
        ],
        "default": 8181,
        "description": "An integer representing a port number between 0 and 65535, inclusive.",
        "required": true,
        "type": "integer"
      }
    },
    {
      "opa_protocol": {
        "default": "http",
        "description": "The protocol to use when talking to Open Policy Agent (OPA) server. Allowed protocols are `http` and `https`.",
        "one_of": [
          "http",
          "https"
        ],
        "type": "string"
      }
    },
    {
      "ssl_verify": {
        "default": true,
        "description": "If set to true, the OPA certificate will be verified according to the CA certificates specified in lua_ssl_trusted_certificate.",
        "required": true,
        "type": "boolean"
      }
    }
  ],
  "required": true,
  "type": "record"
}