{
  "entity_checks": [
    {
      "conditional": {
        "if_field": "mandatory_scope",
        "if_match": {
          "eq": true
        },
        "then_field": "scopes",
        "then_match": {
          "required": true
        }
      }
    }
  ],
  "fields": [
    {
      "accept_http_if_already_terminated": {
        "default": false,
        "description": "Accepts HTTPs requests that have already been terminated by a proxy or load balancer.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "anonymous": {
        "description": "An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails.",
        "type": "string"
      }
    },
    {
      "auth_header_name": {
        "default": "authorization",
        "description": "The name of the header that is supposed to carry the access token.",
        "type": "string"
      }
    },
    {
      "enable_authorization_code": {
        "default": false,
        "description": "An optional boolean value to enable the three-legged Authorization Code flow (RFC 6742 Section 4.1).",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "enable_client_credentials": {
        "default": false,
        "description": "An optional boolean value to enable the Client Credentials Grant flow (RFC 6742 Section 4.4).",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "enable_implicit_grant": {
        "default": false,
        "description": "An optional boolean value to enable the Implicit Grant flow which allows to provision a token as a result of the authorization process (RFC 6742 Section 4.2).",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "enable_password_grant": {
        "default": false,
        "description": "An optional boolean value to enable the Resource Owner Password Credentials Grant flow (RFC 6742 Section 4.3).",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "global_credentials": {
        "default": false,
        "description": "An optional boolean value that allows using the same OAuth credentials generated by the plugin with any other service whose OAuth 2.0 plugin configuration also has `config.global_credentials=true`.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "hide_credentials": {
        "default": false,
        "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "mandatory_scope": {
        "default": false,
        "description": "An optional boolean value telling the plugin to require at least one `scope` to be authorized by the end user.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "persistent_refresh_token": {
        "default": false,
        "required": true,
        "type": "boolean"
      }
    },
    {
      "pkce": {
        "default": "lax",
        "description": "Specifies a mode of how the Proof Key for Code Exchange (PKCE) should be handled by the plugin.",
        "one_of": [
          "lax",
          "none",
          "strict"
        ],
        "required": false,
        "type": "string"
      }
    },
    {
      "provision_key": {
        "auto": true,
        "description": "The unique key the plugin has generated when it has been added to the Service.",
        "encrypted": true,
        "required": true,
        "type": "string",
        "unique": true
      }
    },
    {
      "realm": {
        "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
        "required": false,
        "type": "string"
      }
    },
    {
      "refresh_token_ttl": {
        "between": [
          0,
          100000000
        ],
        "default": 1209600,
        "description": "Time-to-live value for data",
        "required": true,
        "type": "number"
      }
    },
    {
      "reuse_refresh_token": {
        "default": false,
        "description": "An optional boolean value that indicates whether an OAuth refresh token is reused when refreshing an access token.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "scopes": {
        "description": "Describes an array of scope names that will be available to the end user. If `mandatory_scope` is set to `true`, then `scopes` are required.",
        "elements": {
          "type": "string"
        },
        "type": "array"
      }
    },
    {
      "token_expiration": {
        "default": 7200,
        "description": "An optional integer value telling the plugin how many seconds a token should last, after which the client will need to refresh the token. Set to `0` to disable the expiration.",
        "required": true,
        "type": "number"
      }
    }
  ],
  "required": true,
  "type": "record"
}