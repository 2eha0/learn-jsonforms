{
  "fields": [
    {
      "allow_status_codes": {
        "description": "List of status code ranges that are allowed to be logged in metrics.",
        "elements": {
          "match": "^[0-9]+-[0-9]+$",
          "type": "string"
        },
        "type": "array"
      }
    },
    {
      "consumer_identifier_default": {
        "default": "custom_id",
        "one_of": [
          "consumer_id",
          "custom_id",
          "username"
        ],
        "required": true,
        "type": "string"
      }
    },
    {
      "flush_timeout": {
        "deprecation": {
          "message": "statsd: config.flush_timeout is deprecated, please use config.queue.max_coalescing_delay instead",
          "old_default": 2,
          "removal_in_version": "4.0"
        },
        "type": "number"
      }
    },
    {
      "host": {
        "default": "localhost",
        "description": "The IP address or hostname of StatsD server to send data to.",
        "type": "string"
      }
    },
    {
      "hostname_in_prefix": {
        "default": false,
        "type": "boolean"
      }
    },
    {
      "metrics": {
        "default": [
          {
            "name": "request_count",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "latency",
            "stat_type": "timer"
          },
          {
            "name": "request_size",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "status_count",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "response_size",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "unique_users",
            "stat_type": "set"
          },
          {
            "name": "request_per_user",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "upstream_latency",
            "stat_type": "timer"
          },
          {
            "name": "kong_latency",
            "stat_type": "timer"
          },
          {
            "name": "status_count_per_user",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "status_count_per_workspace",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "status_count_per_user_per_route",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "shdict_usage",
            "sample_rate": 1,
            "stat_type": "gauge"
          },
          {
            "name": "cache_datastore_hits_total",
            "sample_rate": 1,
            "stat_type": "counter"
          },
          {
            "name": "cache_datastore_misses_total",
            "sample_rate": 1,
            "stat_type": "counter"
          }
        ],
        "description": "List of metrics to be logged.",
        "elements": {
          "entity_checks": [
            {
              "conditional": {
                "if_field": "stat_type",
                "if_match": {
                  "one_of": [
                    "counter",
                    "gauge"
                  ]
                },
                "then_field": "sample_rate",
                "then_match": {
                  "required": true
                }
              }
            }
          ],
          "fields": [
            {
              "consumer_identifier": {
                "description": "Authenticated user detail.",
                "one_of": [
                  "consumer_id",
                  "custom_id",
                  "username"
                ],
                "type": "string"
              }
            },
            {
              "name": {
                "description": "StatsD metricâ€™s name.",
                "one_of": [
                  "cache_datastore_hits_total",
                  "cache_datastore_misses_total",
                  "kong_latency",
                  "latency",
                  "request_count",
                  "request_per_user",
                  "request_size",
                  "response_size",
                  "shdict_usage",
                  "status_count",
                  "status_count_per_user",
                  "status_count_per_user_per_route",
                  "status_count_per_workspace",
                  "unique_users",
                  "upstream_latency"
                ],
                "required": true,
                "type": "string"
              }
            },
            {
              "sample_rate": {
                "description": "Sampling rate",
                "gt": 0,
                "type": "number"
              }
            },
            {
              "service_identifier": {
                "description": "Service detail.",
                "one_of": [
                  "service_host",
                  "service_id",
                  "service_name",
                  "service_name_or_host"
                ],
                "type": "string"
              }
            },
            {
              "stat_type": {
                "description": "Determines what sort of event a metric represents.",
                "one_of": [
                  "counter",
                  "gauge",
                  "histogram",
                  "meter",
                  "set",
                  "timer"
                ],
                "required": true,
                "type": "string"
              }
            },
            {
              "workspace_identifier": {
                "description": "Workspace detail.",
                "one_of": [
                  "workspace_id",
                  "workspace_name"
                ],
                "type": "string"
              }
            }
          ],
          "type": "record"
        },
        "type": "array"
      }
    },
    {
      "port": {
        "between": [
          0,
          65535
        ],
        "default": 8125,
        "description": "The port of StatsD server to send data to.",
        "type": "integer"
      }
    },
    {
      "prefix": {
        "default": "kong",
        "description": "String to prefix to each metric's name.",
        "type": "string"
      }
    },
    {
      "queue": {
        "fields": [
          {
            "concurrency_limit": {
              "default": 1,
              "description": "The number of of queue delivery timers. -1 indicates unlimited.",
              "one_of": [
                -1,
                1
              ],
              "type": "integer"
            }
          },
          {
            "initial_retry_delay": {
              "between": [
                0.001,
                1000000
              ],
              "default": 0.01,
              "description": "Time in seconds before the initial retry is made for a failing batch.",
              "type": "number"
            }
          },
          {
            "max_batch_size": {
              "between": [
                1,
                1000000
              ],
              "default": 1,
              "description": "Maximum number of entries that can be processed at a time.",
              "type": "integer"
            }
          },
          {
            "max_bytes": {
              "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
              "type": "integer"
            }
          },
          {
            "max_coalescing_delay": {
              "between": [
                0,
                3600
              ],
              "default": 1,
              "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.",
              "type": "number"
            }
          },
          {
            "max_entries": {
              "between": [
                1,
                1000000
              ],
              "default": 10000,
              "description": "Maximum number of entries that can be waiting on the queue.",
              "type": "integer"
            }
          },
          {
            "max_retry_delay": {
              "between": [
                0.001,
                1000000
              ],
              "default": 60,
              "description": "Maximum time in seconds between retries, caps exponential backoff.",
              "type": "number"
            }
          },
          {
            "max_retry_time": {
              "default": 60,
              "description": "Time in seconds before the queue gives up calling a failed handler for a batch.",
              "type": "number"
            }
          }
        ],
        "required": true,
        "type": "record"
      }
    },
    {
      "queue_size": {
        "deprecation": {
          "message": "statsd: config.queue_size is deprecated, please use config.queue.max_batch_size instead",
          "old_default": 1,
          "removal_in_version": "4.0"
        },
        "type": "integer"
      }
    },
    {
      "retry_count": {
        "deprecation": {
          "message": "statsd: config.retry_count no longer works, please use config.queue.max_retry_time instead",
          "old_default": 10,
          "removal_in_version": "4.0"
        },
        "type": "integer"
      }
    },
    {
      "service_identifier_default": {
        "default": "service_name_or_host",
        "one_of": [
          "service_host",
          "service_id",
          "service_name",
          "service_name_or_host"
        ],
        "required": true,
        "type": "string"
      }
    },
    {
      "tag_style": {
        "one_of": [
          "dogstatsd",
          "influxdb",
          "librato",
          "signalfx"
        ],
        "required": false,
        "type": "string"
      }
    },
    {
      "udp_packet_size": {
        "between": [
          0,
          65507
        ],
        "default": 0,
        "type": "number"
      }
    },
    {
      "use_tcp": {
        "default": false,
        "type": "boolean"
      }
    },
    {
      "workspace_identifier_default": {
        "default": "workspace_id",
        "one_of": [
          "workspace_id",
          "workspace_name"
        ],
        "required": true,
        "type": "string"
      }
    }
  ],
  "required": true,
  "type": "record"
}