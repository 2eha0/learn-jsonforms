{
  "fields": [
    {
      "aws_assume_role_arn": {
        "description": "The target AWS IAM role ARN used to invoke the Lambda function.",
        "encrypted": true,
        "referenceable": true,
        "type": "string"
      }
    },
    {
      "aws_imds_protocol_version": {
        "default": "v1",
        "description": "Identifier to select the IMDS protocol version to use: `v1` or `v2`.",
        "one_of": [
          "v1",
          "v2"
        ],
        "required": true,
        "type": "string"
      }
    },
    {
      "aws_key": {
        "description": "The AWS key credential to be used when invoking the function.",
        "encrypted": true,
        "referenceable": true,
        "type": "string"
      }
    },
    {
      "aws_region": {
        "description": "A string representing a host name, such as example.com.",
        "type": "string"
      }
    },
    {
      "aws_role_session_name": {
        "default": "kong",
        "description": "The identifier of the assumed role session.",
        "type": "string"
      }
    },
    {
      "aws_secret": {
        "description": "The AWS secret credential to be used when invoking the function. ",
        "encrypted": true,
        "referenceable": true,
        "type": "string"
      }
    },
    {
      "aws_sts_endpoint_url": {
        "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
        "type": "string"
      }
    },
    {
      "awsgateway_compatible": {
        "default": false,
        "description": "An optional value that defines whether the plugin should wrap requests into the Amazon API gateway.",
        "type": "boolean"
      }
    },
    {
      "base64_encode_body": {
        "default": true,
        "description": "An optional value that Base64-encodes the request body.",
        "type": "boolean"
      }
    },
    {
      "disable_https": {
        "default": false,
        "type": "boolean"
      }
    },
    {
      "empty_arrays_mode": {
        "default": "legacy",
        "description": "An optional value that defines whether Kong should send empty arrays (returned by Lambda function) as `[]` arrays or `{}` objects in JSON responses. The value `legacy` means Kong will send empty arrays as `{}` objects in response",
        "one_of": [
          "correct",
          "legacy"
        ],
        "required": true,
        "type": "string"
      }
    },
    {
      "forward_request_body": {
        "default": false,
        "description": "An optional value that defines whether the request body is sent in the request_body field of the JSON-encoded request. If the body arguments can be parsed, they are sent in the separate request_body_args field of the request. ",
        "type": "boolean"
      }
    },
    {
      "forward_request_headers": {
        "default": false,
        "description": "An optional value that defines whether the original HTTP request headers are sent as a map in the request_headers field of the JSON-encoded request.",
        "type": "boolean"
      }
    },
    {
      "forward_request_method": {
        "default": false,
        "description": "An optional value that defines whether the original HTTP request method verb is sent in the request_method field of the JSON-encoded request.",
        "type": "boolean"
      }
    },
    {
      "forward_request_uri": {
        "default": false,
        "description": "An optional value that defines whether the original HTTP request URI is sent in the request_uri field of the JSON-encoded request.",
        "type": "boolean"
      }
    },
    {
      "function_name": {
        "description": "The AWS Lambda function to invoke. Both function name and function ARN (including partial) are supported.",
        "required": false,
        "type": "string"
      }
    },
    {
      "host": {
        "description": "A string representing a host name, such as example.com.",
        "type": "string"
      }
    },
    {
      "invocation_type": {
        "default": "RequestResponse",
        "description": "The InvocationType to use when invoking the function. Available types are RequestResponse, Event, DryRun.",
        "one_of": [
          "DryRun",
          "Event",
          "RequestResponse"
        ],
        "required": true,
        "type": "string"
      }
    },
    {
      "is_proxy_integration": {
        "default": false,
        "description": "An optional value that defines whether the response format to receive from the Lambda to this format.",
        "type": "boolean"
      }
    },
    {
      "keepalive": {
        "default": 60000,
        "description": "An optional value in milliseconds that defines how long an idle connection lives before being closed.",
        "required": true,
        "type": "number"
      }
    },
    {
      "log_type": {
        "default": "Tail",
        "description": "The LogType to use when invoking the function. By default, None and Tail are supported.",
        "one_of": [
          "None",
          "Tail"
        ],
        "required": true,
        "type": "string"
      }
    },
    {
      "port": {
        "between": [
          0,
          65535
        ],
        "default": 443,
        "description": "An integer representing a port number between 0 and 65535, inclusive.",
        "type": "integer"
      }
    },
    {
      "proxy_url": {
        "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
        "type": "string"
      }
    },
    {
      "qualifier": {
        "description": "The qualifier to use when invoking the function.",
        "type": "string"
      }
    },
    {
      "skip_large_bodies": {
        "default": true,
        "description": "An optional value that defines whether Kong should send large bodies that are buffered to disk",
        "type": "boolean"
      }
    },
    {
      "timeout": {
        "default": 60000,
        "description": "An optional timeout in milliseconds when invoking the function.",
        "required": true,
        "type": "number"
      }
    },
    {
      "unhandled_status": {
        "between": [
          100,
          999
        ],
        "description": "The response status code to use (instead of the default 200, 202, or 204) in the case of an Unhandled Function Error.",
        "type": "integer"
      }
    }
  ],
  "required": true,
  "type": "record"
}