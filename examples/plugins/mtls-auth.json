{
  "entity_checks": [
    {
      "mutually_required": [
        "http_proxy_host",
        "http_proxy_port"
      ]
    },
    {
      "mutually_required": [
        "https_proxy_host",
        "https_proxy_port"
      ]
    }
  ],
  "fields": [
    {
      "allow_partial_chain": {
        "default": false,
        "description": "Allow certificate verification with only an intermediate certificate. When this is enabled, you don't need to upload the full chain to Kong Certificates.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "anonymous": {
        "description": "An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request fails with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
        "type": "string"
      }
    },
    {
      "authenticated_group_by": {
        "default": "CN",
        "description": "Certificate property to use as the authenticated group. Valid values are `CN` (Common Name) or `DN` (Distinguished Name). Once `skip_consumer_lookup` is applied, any client with a valid certificate can access the Service/API. To restrict usage to only some of the authenticated users, also add the ACL plugin (not covered here) and create allowed or denied groups of users.",
        "one_of": [
          "CN",
          "DN"
        ],
        "required": false,
        "type": "string"
      }
    },
    {
      "ca_certificates": {
        "description": "List of CA Certificates strings to use as Certificate Authorities (CA) when validating a client certificate. At least one is required but you can specify as many as needed. The value of this array is comprised of primary keys (`id`).",
        "elements": {
          "type": "string",
          "uuid": true
        },
        "required": true,
        "type": "array"
      }
    },
    {
      "cache_ttl": {
        "default": 60,
        "description": "Cache expiry time in seconds.",
        "required": true,
        "type": "number"
      }
    },
    {
      "cert_cache_ttl": {
        "default": 60000,
        "description": "The length of time in seconds between refreshes of the revocation check status cache.",
        "type": "number"
      }
    },
    {
      "consumer_by": {
        "default": [
          "custom_id",
          "username"
        ],
        "description": "Whether to match the subject name of the client-supplied certificate against consumer's `username` and/or `custom_id` attribute. If set to `[]` (the empty array), then auto-matching is disabled.",
        "elements": {
          "one_of": [
            "custom_id",
            "username"
          ],
          "type": "string"
        },
        "required": false,
        "type": "array"
      }
    },
    {
      "default_consumer": {
        "description": "The UUID or username of the consumer to use when a trusted client certificate is presented but no consumer matches. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`.",
        "type": "string"
      }
    },
    {
      "http_proxy_host": {
        "description": "A string representing a host name, such as example.com.",
        "type": "string"
      }
    },
    {
      "http_proxy_port": {
        "between": [
          0,
          65535
        ],
        "description": "An integer representing a port number between 0 and 65535, inclusive.",
        "type": "integer"
      }
    },
    {
      "http_timeout": {
        "default": 30000,
        "description": "HTTP timeout threshold in milliseconds when communicating with the OCSP server or downloading CRL.",
        "type": "number"
      }
    },
    {
      "https_proxy_host": {
        "description": "A string representing a host name, such as example.com.",
        "type": "string"
      }
    },
    {
      "https_proxy_port": {
        "between": [
          0,
          65535
        ],
        "description": "An integer representing a port number between 0 and 65535, inclusive.",
        "type": "integer"
      }
    },
    {
      "revocation_check_mode": {
        "default": "IGNORE_CA_ERROR",
        "description": "Controls client certificate revocation check behavior. If set to `SKIP`, no revocation check is performed. If set to `IGNORE_CA_ERROR`, the plugin respects the revocation status when either OCSP or CRL URL is set, and doesn't fail on network issues. If set to `STRICT`, the plugin only treats the certificate as valid when it's able to verify the revocation status.",
        "one_of": [
          "IGNORE_CA_ERROR",
          "SKIP",
          "STRICT"
        ],
        "required": false,
        "type": "string"
      }
    },
    {
      "send_ca_dn": {
        "default": false,
        "description": "Sends the distinguished names (DN) of the configured CA list in the TLS handshake message.",
        "type": "boolean"
      }
    },
    {
      "skip_consumer_lookup": {
        "default": false,
        "description": "Skip consumer lookup once certificate is trusted against the configured CA list.",
        "required": true,
        "type": "boolean"
      }
    }
  ],
  "required": true,
  "type": "record"
}