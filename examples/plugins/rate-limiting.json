{
  "fields": [
    {
      "day": {
        "description": "The number of HTTP requests that can be made per day.",
        "gt": 0,
        "type": "number"
      }
    },
    {
      "error_code": {
        "default": 429,
        "description": "Set a custom error code to return when the rate limit is exceeded.",
        "gt": 0,
        "type": "number"
      }
    },
    {
      "error_message": {
        "default": "API rate limit exceeded",
        "description": "Set a custom error message to return when the rate limit is exceeded.",
        "type": "string"
      }
    },
    {
      "fault_tolerant": {
        "default": true,
        "description": "A boolean value that determines if the requests should be proxied even if Kong has troubles connecting a third-party data store. If `true`, requests will be proxied anyway, effectively disabling the rate-limiting function until the data store is working again. If `false`, then the clients will see `500` errors.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "header_name": {
        "description": "A string representing an HTTP header name.",
        "type": "string"
      }
    },
    {
      "hide_client_headers": {
        "default": false,
        "description": "Optionally hide informative response headers.",
        "required": true,
        "type": "boolean"
      }
    },
    {
      "hour": {
        "description": "The number of HTTP requests that can be made per hour.",
        "gt": 0,
        "type": "number"
      }
    },
    {
      "limit_by": {
        "default": "consumer",
        "description": "The entity that is used when aggregating the limits.",
        "one_of": [
          "consumer",
          "consumer-group",
          "credential",
          "header",
          "ip",
          "path",
          "service"
        ],
        "type": "string"
      }
    },
    {
      "minute": {
        "description": "The number of HTTP requests that can be made per minute.",
        "gt": 0,
        "type": "number"
      }
    },
    {
      "month": {
        "description": "The number of HTTP requests that can be made per month.",
        "gt": 0,
        "type": "number"
      }
    },
    {
      "path": {
        "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
        "match_none": [
          {
            "err": "must not have empty segments",
            "pattern": "//"
          }
        ],
        "starts_with": "/",
        "type": "string"
      }
    },
    {
      "policy": {
        "default": "local",
        "description": "The rate-limiting policies to use for retrieving and incrementing the limits.",
        "len_min": 0,
        "one_of": [
          "cluster",
          "local",
          "redis"
        ],
        "type": "string"
      }
    },
    {
      "redis": {
        "description": "Redis configuration",
        "fields": [
          {
            "database": {
              "default": 0,
              "description": "Database to use for the Redis connection when using the `redis` strategy",
              "type": "integer"
            }
          },
          {
            "host": {
              "description": "A string representing a host name, such as example.com.",
              "type": "string"
            }
          },
          {
            "password": {
              "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
              "encrypted": true,
              "len_min": 0,
              "referenceable": true,
              "type": "string"
            }
          },
          {
            "port": {
              "between": [
                0,
                65535
              ],
              "default": 6379,
              "description": "An integer representing a port number between 0 and 65535, inclusive.",
              "type": "integer"
            }
          },
          {
            "server_name": {
              "description": "A string representing an SNI (server name indication) value for TLS.",
              "required": false,
              "type": "string"
            }
          },
          {
            "ssl": {
              "default": false,
              "description": "If set to true, uses SSL to connect to Redis.",
              "required": false,
              "type": "boolean"
            }
          },
          {
            "ssl_verify": {
              "default": false,
              "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly.",
              "required": false,
              "type": "boolean"
            }
          },
          {
            "timeout": {
              "between": [
                0,
                2147483646
              ],
              "default": 2000,
              "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
              "type": "integer"
            }
          },
          {
            "username": {
              "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
              "referenceable": true,
              "type": "string"
            }
          }
        ],
        "required": true,
        "type": "record"
      }
    },
    {
      "second": {
        "description": "The number of HTTP requests that can be made per second.",
        "gt": 0,
        "type": "number"
      }
    },
    {
      "sync_rate": {
        "default": -1,
        "description": "How often to sync counter data to the central data store. A value of -1 results in synchronous behavior.",
        "required": true,
        "type": "number"
      }
    },
    {
      "year": {
        "description": "The number of HTTP requests that can be made per year.",
        "gt": 0,
        "type": "number"
      }
    }
  ],
  "required": true,
  "shorthand_fields": [
    {
      "redis_database": {
        "deprecation": {
          "message": "rate-limiting: config.redis_database is deprecated, please use config.redis.database instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "database",
                "redis"
              ]
            }
          ]
        },
        "type": "integer"
      }
    },
    {
      "redis_host": {
        "deprecation": {
          "message": "rate-limiting: config.redis_host is deprecated, please use config.redis.host instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "host",
                "redis"
              ]
            }
          ]
        },
        "type": "string"
      }
    },
    {
      "redis_password": {
        "deprecation": {
          "message": "rate-limiting: config.redis_password is deprecated, please use config.redis.password instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "password",
                "redis"
              ]
            }
          ]
        },
        "len_min": 0,
        "type": "string"
      }
    },
    {
      "redis_port": {
        "deprecation": {
          "message": "rate-limiting: config.redis_port is deprecated, please use config.redis.port instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "port",
                "redis"
              ]
            }
          ]
        },
        "type": "integer"
      }
    },
    {
      "redis_server_name": {
        "deprecation": {
          "message": "rate-limiting: config.redis_server_name is deprecated, please use config.redis.server_name instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "redis",
                "server_name"
              ]
            }
          ]
        },
        "type": "string"
      }
    },
    {
      "redis_ssl": {
        "deprecation": {
          "message": "rate-limiting: config.redis_ssl is deprecated, please use config.redis.ssl instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "redis",
                "ssl"
              ]
            }
          ]
        },
        "type": "boolean"
      }
    },
    {
      "redis_ssl_verify": {
        "deprecation": {
          "message": "rate-limiting: config.redis_ssl_verify is deprecated, please use config.redis.ssl_verify instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "redis",
                "ssl_verify"
              ]
            }
          ]
        },
        "type": "boolean"
      }
    },
    {
      "redis_timeout": {
        "deprecation": {
          "message": "rate-limiting: config.redis_timeout is deprecated, please use config.redis.timeout instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "redis",
                "timeout"
              ]
            }
          ]
        },
        "type": "integer"
      }
    },
    {
      "redis_username": {
        "deprecation": {
          "message": "rate-limiting: config.redis_username is deprecated, please use config.redis.username instead",
          "removal_in_version": "4.0",
          "replaced_with": [
            {
              "path": [
                "redis",
                "username"
              ]
            }
          ]
        },
        "type": "string"
      }
    }
  ],
  "type": "record"
}